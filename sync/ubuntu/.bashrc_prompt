[ -f ~/.git-completion.bash ] && . ~/.git-completion.bash
[ -f ~/.git-prompt.sh ] && . ~/.git-prompt.sh
GIT_PS1_SHOWDIRTYSTATE=YES
GIT_PS1_SHOWUNTRACKEDFILES=YES
GIT_PS1_SHOWUPSTREAM="auto"
#033
while read name fg bg attr ; do
    a="\033[21m"
    [[ $attr == "BOLD" ]] && a="\033[1m"
    [[ $attr == "DIM" ]] && a="\033[2m"
    [[ $attr == "INVERT" ]] && a="\033[7m"
    [[ $fg == "NONE" ]] && FG="" || FG="\033[38;5;${fg}m"
    [[ $bg == "NONE" ]] && BG="" || BG="\033[48;5;${bg}m"
    eval $name="'\[\033[0m${FG}${BG}$a\]'"
    eval __$name="'${FG}${BG}$a'"
done << COLORS
BLUE_ON_GREY 20 248 NORM
GREY_ON_NONE 248 NONE INVERT
GREY_ON_BLUE 248 117 NORM
BLUE_ON_BLUE 21 117 NORM
BLUE_ON_GREEN 117 113 NORM
GREY_ON_GREEN 236 113 NORM
GREEN_ON_YELLOW 113 228 NORM
GREEN_ON_NONE 113 NONE NORM
LT_GREY_ON_YELLOW 241 228 BOLD
DK_GREEN_ON_YELLOW 34 228 BOLD
RED_ON_YELLOW 160 228 BOLD
CYAN_ON_YELLOW 201 228 BOLD
BLUE_ON_BROWN 117 130 NORM
BROWN_ON_YELLOW 88 228 NORM
BROWN_ON_GREEN 130 113 NORM
YELLOW_ON_BROWN 226 130 NORM
YELLOW_ON_NONE 228 NONE NORM
GREEN_ON_GREY 28 248 BOLD
RED_ON_GREY 160 248 BOLD
COLORS
RST="\[\033[0m\]"
__RST="\033[0m"

get_git_status(){
  local __git_branch_color="$__DK_GREEN_ON_YELLOW"
  local GOY=${GREEN_ON_YELLOW}
  local YON=${YELLOW_ON_NONE}
  GIT_PS1_SHOWDIRTYSTATE=true
  GIT_PS1_SHOWUNTRACKEDFILES=true
  WINPATH=""
  _CWD="`pwd`" ; for wd in $WINDOWS_PREFIXES ; do [[ $wd == ${_CWD:0:${#wd}} ]] && \
      GIT_PS1_SHOWDIRTYSTATE= && GIT_PS1_SHOWUNTRACKEDFILES= ; done
  local __git_branch=`__git_ps1 %s`;

  # colour branch name depending on state
  if [[ "${__git_branch}" =~ "*" ]]; then     # if repository is dirty
      __git_branch_color="$__RED_ON_YELLOW"
  elif [[ "${__git_branch}" =~ "$" ]]; then   # if there is something stashed
      __git_branch_color="$__BROWN_ON_YELLOW"
  elif [[ "${__git_branch}" =~ "%" ]]; then   # if there are only untracked files
      __git_branch_color="$__LT_GREY_ON_YELLOW"
  elif [[ "${__git_branch}" =~ "+" ]]; then   # if there are staged files
      __git_branch_color="$__CYAN_ON_YELLOW"
  fi

  if [[ "$1" == "clean-colors" ]]
  then
    GOY=${__GREEN_ON_YELLOW}
    YON=${__YELLOW_ON_NONE}
    __git_branch=`echo ${__git_branch}|sed 's/ .*//'`
  else
    GOY="${GOY}"
    __git_branch_color="\[\033[0m${__git_branch_color}\]"
  fi

  if [ -n "$__git_branch" ] ; then
      SYMB='➦'
      [[ ${__git_branch/.../} == $__git_branch ]] && SYMB=''
      GIT_STATUS="${GOY}${__git_branch_color} $SYMB ${__git_branch} ${YON}"
  else
      GIT_STATUS=
  fi
  echo $GIT_STATUS
}

function color_my_prompt {
  local EXIT="$?"

  GIT_STATUS=`get_git_status`
  [ -z "$GIT_STATUS" ] && GIT_STATUS="${GREEN_ON_NONE}"

  BG_JOBS=""
  (( $(jobs -l | wc -l) )) && BG_JOBS="${BLUE_ON_GREY}⏳ "

  CMD_STATUS="${GREEN_ON_GREY}✓"
  (( $EXIT )) && CMD_STATUS="${RED_ON_GREY}✗"

  PYTHON_VIRTUALENV="${BLUE_ON_GREEN}"
  if [ -n "$VIRTUAL_ENV" ] ; then
      PYTHON_VIRTUALENV="${BLUE_ON_BROWN}${YELLOW_ON_BROWN}`basename \"$VIRTUAL_ENV\"`${BROWN_ON_GREEN}"
  fi

  PS1="${BLUE_ON_GREY}\u${GREY_ON_BLUE}"
  PS1="$PS1${BLUE_ON_BLUE}\h${PYTHON_VIRTUALENV}"
  PS1="$PS1${GREY_ON_GREEN}\w${GIT_STATUS}${RST}\n"
  PS1="$PS1${BLUE_ON_GREY} $BG_JOBS$CMD_STATUS ${GREY_ON_NONE}$RST "
}
export PROMPT_COMMAND=color_my_prompt


